= simple_form_for route, remote: true do |f|
  .col-md-2
    .form-group
      = autocomplete_field_tag 'route[destination]', route.breakout.try(:destination), autocomplete_breakout_destination_dashboard_index_path, data: {showNoMatches: false, 'auto-focus': true}, update_elements: {id: '#route_breakout_id', code: '#route_breakout'}, class: 'form-control', placeholder: 'Enter Route Name'
  .col-md-2
    .form-group
      .input-group
        span.input-group-addon +
        = autocomplete_field_tag 'route[breakout]', route.breakout.try(:code), autocomplete_breakout_code_dashboard_index_path, data: {showNoMatches: false, 'auto-focus': true}, update_elements: {id: '#route_breakout_id', destination: '#route_destination'}, class: 'form-control', placeholder: 'Enter Breakout', 'min-length': 1
      = f.input :breakout_id, as: :hidden
  .col-md-2
    .form-group
      .input-group
        span.input-group-addon $
        = f.input :price, class: 'form-control', placeholder: '0.000', input_html: {min: '0.001', max: '9.999', step: '0.001'}, label: false, wrapper: false, error: false
  .col-md-2
    .form-group
      = f.select :quality_type, Route.quality_types.keys.map {|c| [c.titleize.upcase.tr(' ', '-'), c]}, {include_blank: "Route Type"}, {class: 'form-control'}
  .col-md-2
    .form-group
      = f.select :purchase_type, Route.purchase_types.keys.map {|c| [c.humanize, c]}, {include_blank: "Buy/Sell"}, {class: 'form-control'}
  .sarch-btn.col-md-2
    = f.submit "Find Matches", class: 'btn btn-default', id: 'letstest'
  .text-center
    a#reset-btn.btn-2 href="javascript:void(0)" RESET
  .clearfix
  p.text-danger.text-center#route_error style="font-size: 18px;"
    = f.object.errors.full_messages.first