section.search-route-section
  .search-section
    .container
      .search-heading.voipx-heading
        h2
          | Search 
          span Route
      .search-form
        = simple_form_for :search, url: search_path, method: :get do |f|
          .col-md-6
            .form-group
              = f.select :purchase_type, [['I want to Buy', 'buy'], ['I want to Sell', 'sell'], ['Any', 'any']], {selected: params[:search].try(:[], :purchase_type)}, {class: 'form-control'}
          .col-md-6
            .form-group
              = autocomplete_field_tag 'search[destination]', params[:search].try(:[], :destination), autocomplete_breakout_destination_dashboard_index_path, data: {showNoMatches: false}, update_elements: {code: '#search_breakout'}, class: 'form-control', placeholder: 'Route Name'
          .col-md-4
            .form-group
              = autocomplete_field_tag 'search[breakout]', params[:search].try(:[], :breakout), autocomplete_breakout_code_dashboard_index_path, data: {showNoMatches: false}, update_elements: {destination: '#search_destination'}, class: 'form-control', placeholder: 'Breakout'
          .col-md-4
            .form-group
              = f.input :price, as: :integer, class: 'form-control', placeholder: '0.000', input_html: {min: '0.001', max: '9.999', step: '0.001', value: params[:search].try(:[], :price)}, label: false, wrapper: false
          .col-md-4
            .form-group
              = f.select :quality_type, [['CLI', 'cli'], ['NON-CLI', 'non_cli'], ['Any', 'any']], {selected: params[:search].try(:[], :quality_type)}, {class: 'form-control'}
          .sarch-btn.col-md-12
            = f.submit "SHOW MATCHES", name: nil, class: "btn btn-default"

section.search-routes-table
  .container
    - if defined?(@routes)
      .search-heading.voipx-heading
        h2 style=("margin-bottom: 0px;") 
          | Search 
          span Results
        span
          strong #{@routes.size.to_s} 
          | search results 
          - if params[:search].try(:[], :destination).present?
            | for 
            strong #{params[:search].try(:[], :destination)}
      - if @routes.any?
        .search-routes-tab-inner
          .srt-head
            .row
              .col-xs-1
              .col-xs-3 Route Name
              .col-xs-5
              .col-xs-3.text-center Buyer/Seller
          .srt-body
            - @routes.each do |route|
              .row.tab-row
                .col-xs-1.text-center
                  = image_tag "icon-magnifying-glass.png"
                .col-xs-3
                  span.route-name #{route.breakout.destination}
                .col-xs-5.route-info
                  span
                    | Breakout: 
                    span #{route.breakout.code}
                  span
                    | Type: 
                    span #{route.quality_type.upcase}
                  span
                    | Price: 
                    span $#{route.price}
                  span
                    | Buy/Sell: 
                    span #{route.purchase_type.humanize}
                .col-xs-3.text-center.buyer-name
                  = link_to user_path(route.user), target: "_blank" do
                    i.fa.fa-user aria-hidden="true"
                    |  #{route.user.name}
    - else
      .search-heading.voipx-heading
        h2 style=("margin-bottom: 0px;") 
          | Search 
          span Results
        span Please search to see matches


/ #center-content
/   h2 Search Routes
/   br
/   br

/   = simple_form_for :search, url: search_path, method: :get, html: {class: 'form-inline justify-content-center'} do |f|
/     .form-group
/       = f.select :purchase_type, [['I want to Buy', 'buy'], ['I want to Sell', 'sell'], ['Any', 'any']], {selected: params[:search].try(:[], :purchase_type)}, {class: 'form-control mr-sm-2'}
      
/       = autocomplete_field_tag 'search[destination]', params[:search].try(:[], :destination), autocomplete_breakout_destination_dashboard_index_path, data: {showNoMatches: false}, update_elements: {code: '#search_breakout'}, class: 'form-control mr-sm-2', placeholder: 'Route Name'

/       = autocomplete_field_tag 'search[breakout]', params[:search].try(:[], :breakout), autocomplete_breakout_code_dashboard_index_path, data: {showNoMatches: false}, update_elements: {destination: '#search_destination'}, class: 'form-control mr-sm-2', placeholder: 'Breakout'

/       .input-group.mb-2.mr-sm-2.mb-sm-0
/         .input-group-addon $
/         = f.input :price, as: :integer, class: 'form-control', placeholder: '0.000', input_html: {min: '0.001', max: '9.999', step: '0.001', value: params[:search].try(:[], :price)}, label: false, wrapper: false
      
/       = f.select :quality_type, [['CLI', 'cli'], ['NON-CLI', 'non_cli'], ['Any', 'any']], {selected: params[:search].try(:[], :quality_type)}, {class: 'form-control mr-sm-2'}

/       = f.submit "Show Matches", name: nil, class: 'btn btn-primary mb-2 mr-sm-2 mb-sm-0'
/ br
/ br
/ br
/ br
/ br
/ br
/ .row
/   .col-md-12
/     table.table.table-sm.table-bordered.table-hover
/       thead.thead-inverse
/         tr
/           th Routes
/           th Breakouts
/           th Price
/           th Type
/           th Buy/Sell
/           th User Profile
/       tbody
/         - if defined?(@routes)
/           - if @routes.any?
/             - @routes.each do |route|
/               tr
/                 td #{route.breakout.destination}
/                 td #{route.breakout.code}
/                 td $#{route.price}
/                 td #{route.quality_type.upcase}
/                 td #{route.purchase_type.humanize}
/                 td
/                   = link_to route.user.name, user_path(route.user), target: "_blank"
/           - else
/             tr
/               td colspan="6" No matches found
/         - else
/           tr
/             td colspan="6" Please search to see matches